version: "3.3"
services:

  db:
    image: postgres:15
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - default

  #  pgadmin:
  #    image: dpage/pgadmin4
  #    depends_on:
  #      - db
  #    env_file:
  #      - .env
  #    environment:
  #      - PGADMIN_DEFAULT_EMAIL=exonys@mail.ru
  #      - PGADMIN_DEFAULT_PASSWORD=1
  #    ports:
  #      - 9080:90
  #    networks:
  #      - default

  #  queue:
  #    image: redis
  #    networks:
  #      - default
  #    ports:
  #      - 6379:6379


  backend:
    restart: always
    command: bash -c "uvicorn backend.app.main:app --host 0.0.0.0 --port ${SERVICE_PORT} --reload"
    #    command:  sh /root_app/backend/entry-point.sh
    #image: conspectus_backend
    container_name: pixel_battle_backend
    tty: true
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - PYTHONPATH=${PYTHONPATH}
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
    #      - SERVICE_PORT:8000
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
    networks:
      - default
    volumes:
      - ./backend:/root_app/backend
      - ./common:/root_app/common
      - ./backend/app:/root_app/backend/app
    build:
      context: .
      dockerfile: ./backend/backend.dockerfile
      args:
        INSTALL_DEV: yes

  prometheus:
    image: prom/prometheus:v2.26.0 # Используйте актуальную версию
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Укажите путь к вашему файлу конфигурации
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=123 # Задайте пароль для входа в Grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus # Убедитесь, что Grafana запускается после Prometheus


  nodeexporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    volumes:
      - /etc/machine-id:/etc/machine-id:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro # Для мониторинга дисков
    ports:
      - "8080:8080"
    privileged: true # Запуск контейнера в привилегированном режиме


volumes:
  app-db-data:
  grafana_data:


